server:
  port: 8083
  servlet:
    context-path: /api/v1/
spring:
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bootstrap-servers: host.docker.internal:29092
      properties:
        spring:
          json:
            add:
              type:
                headers: false
  cloud:
    openfeign:
      client:
        config:
          user:
            url: http://host.docker.internal:8081/api/v1/user
          event:
            url: http://host.docker.internal:8082/api/v1/event
  application:
    name: ticket-service
  datasource:
    username: postgres
    password: postgres
    url: jdbc:postgresql://host.docker.internal:5434/event_ticket_system_ticket_service
    driver-class-name: org.postgresql.Driver
  jpa:
    open-in-view: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
eureka:
  instance:
    hostname: localhost
  client:
    service-url:
      defaultZone: http://host.docker.internal:8761/
management:
  endpoint:
    health:
      circuitbeakers:
        enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include:
          - "*"
logging:
  level:
    org:
      springframework:
        web: DEBUG
        security: DEBUG
