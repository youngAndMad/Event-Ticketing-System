version: '3'
volumes:
  postgres_data:
    driver: local
services:

  # database for user-service
  postgres-user-service:
    container_name: postgres-user-service
    image: postgres:15
    environment:
      POSTGRES_DB: event_ticket_system_user_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ./configuration/postgres-user-service:/data/postgres
    expose:
      - "5431"
    ports:
      - "5431:5431"
    command: -p 5431
    restart: always

  # database for event-service
  postgres-event-service:
    container_name: postgres-event-service
    image: postgres:15
    environment:
      POSTGRES_DB: event_ticket_system_event_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ./configuration/postgres-event-service:/data/postgres
    expose:
        - "5433"
    ports:
      - "5433:5433"
    command: -p 5433
    restart: always

  # database for ticket-service
  postgres-ticket-service:
    container_name: postgres-ticket-service
    image: postgres:15
    environment:
      POSTGRES_DB: event_ticket_system_ticket_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
    volumes:
      - ./configuration/postgres-ticket-service:/data/postgres
    expose:
      - "5434"
    ports:
      - "5434:5434"
    command: -p 5434
    restart: always

  # eureka discovery server
  discovery-service:
    container_name: discovery-service
    image: daneker/discovery-service:latest
    ports:
      - "8761:8761"

  # spring cloud config server
  config-service:
    container_name: config-service
    image: daneker/config-service:latest
    depends_on:
      - discovery-service
    ports:
      - "8888:8888"

  # spring cloud gateway
  api-gateway:
    container_name: api-gateway
    image: daneker/api-gateway:latest
    depends_on:
     - config-service
     - discovery-service
     - keycloak
    ports:
      - "8090:8090"

  user-service:
    container_name: user-service
    image: daneker/user-service:latest
    ports:
      - "8081:8081"
    depends_on:
      - postgres-user-service
      - api-gateway
      - kafka

  event-service:
    container_name: event-service
    image: daneker/event-service:latest
    ports:
      - "8082:8082"
    depends_on:
      - config-service
      - elasticsearch
      - api-gateway


  notification-service:
    container_name: notification-service
    image: daneker/notification-service:latest
    ports:
      - "8118:8118"
    depends_on:
      - kafka
      - config-service

  ticket-service:
    container_name: ticket-service
    image: daneker/ticket-service:latest
    ports:
      - "8083:8083"
    depends_on:
      - api-gateway
      - config-service
      - kafka

  #database for keycloak
  postgres:
    image: postgres:9.6
    container_name: kc_db
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
        - postgres_data:/var/lib/postgresql/data
  keycloak:
    build:
      dockerfile: ./keycloak.dockerfile
    container_name: kc
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_SCHEMA: public
      DB_PASSWORD: password
      #      KEYCLOAK_USER: admin
      #      KEYCLOAK_PASSWORD: password
    ports:
      - "8080:8080"
    volumes:
        - ./configuration/themes/demo:/opt/jboss/keycloak/themes/demo
    depends_on:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka:29092,LISTENER_EXTERNAL://localhost:9292
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL

  elasticsearch:
    image: elasticsearch:7.9.2
    ports:
      - "9200:9200"
    environment:
     - discovery.type=single-node
    ulimits:
       memlock:
         soft: -1
         hard: -1
  kibana:
    image: kibana:7.9.2
    ports:
     - "5601:5601"
